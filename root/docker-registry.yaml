- import_playbook: docker.yaml
- import_playbook: nginx.yaml

- hosts: all
  gather_facts: false
  tasks:

  - name: install python docker module
    become: yes
    become_user: root
    pip:
      executable: pip3
      name: docker
      version: 2.0.0
      state: present

  - name: Create user docker-registry, add to group docker
    become: yes
    become_user: root
    user:
      name: docker-registry
      group: docker
      system: yes
      create_home: no
      append: no

  - name: Create registry storage directory
    become: yes
    become_user: root
    file:
      path: /srv/registry
      state: directory
      owner: docker-registry
      group: docker
      mode: '0770'

  - name: Create Docker registry container
    become: yes
    become_user: docker-registry
    docker_container:
      name: registry
      image: registry:latest
      state: present
      restart: no
      volumes: /srv/registry:/var/lib/registry:rw
      ports: 5000:5000
      env:
        REGISTRY_HTTP_ADDR: 0.0.0.0:5000

  - name: Copy docker-registry
    become: yes
    become_user: root
    copy:
      src: docker-registry/docker-registry
      dest: /usr/local/bin/docker-registry
      owner: root
      group: root
      mode: '0755'

  - name: Copy docker-registry.service
    become: yes
    become_user: root
    copy:
      src: docker-registry/docker-registry.service
      dest: /lib/systemd/system/docker-registry.service
      owner: root
      group: root
      mode: '0644'

  - name: Start Docker registry service
    become: yes
    become_user: root
    systemd:
      daemon_reload: yes
      enabled: yes
      state: started
      name: docker-registry

  # FIXME This code is replicated in jenkins.yaml. Refactor using a module
  - name: Create Docker registry key
    become: yes
    become_user: root
    openssl_privatekey:
      owner: root
      group: ssl-cert
      path: /etc/ssl/private/docker.localhost.key

  - name: Look for Docker registry certificate
    become: yes
    become_user: root
    stat:
      path: /etc/ssl/certs/docker.localhost.crt
    register: docker_registry_certificate

  - name: Create Docker registry certificate Signing Request
    when: docker_registry_certificate.stat.exists == False
    become: yes
    become_user: root
    openssl_csr:
      privatekey_path: /etc/ssl/private/docker.localhost.key
      path: /tmp/docker.localhost.csr
      common_name: docker.localhost

  - name: Create Docker registry certificate
    when: docker_registry_certificate.stat.exists == False
    become: yes
    become_user: root
    openssl_certificate:
      provider: ownca
      ownca_path: /etc/ssl/certs/localhost_CA.pem
      ownca_privatekey_path: /etc/ssl/private/localhost_CA.key
      privatekey_path: /etc/ssl/private/docker.localhost.key
      csr_path: /tmp/docker.localhost.csr
      path: /etc/ssl/certs/docker.localhost.crt

  - name: Copy docker.localhost
    become: yes
    become_user: root
    copy:
      src: docker-registry/docker.localhost
      dest: /etc/nginx/sites-available/docker.localhost
      owner: root
      group: root
      mode: '0644'

  - name: Create symlink to enable "docker.localhost" site
    become: yes
    become_user: root
    file:
      src: /etc/nginx/sites-available/docker.localhost
      dest: /etc/nginx/sites-enabled/docker.localhost
      owner: root
      group: root
      state: link

  - name: Reload Nginx
    become: yes
    become_user: root
    service:
      name: nginx
      state: reloaded
