# THIS IS NOT MEANT TO INSTALL JENKINS ANYWHERE BUT YOUR LOCAL COMPUTER!
# If you work developing pipelines, having a local Jenkins installation
# may speed up your development-test-deploy pipeline cycle.

- hosts: all
  # TODO We need "become" and "become_user" here for include_role, and
  # need to repeat then below, for each task. This can't be right.
  become: yes
  become_user: root
  tasks:

  # See https://github.com/geerlingguy/ansible-role-jenkins
  - include_role:
      name: ansible-role-jenkins
    vars:
      jenkins_plugins:
        - configuration-as-code
        - blueocean
      jenkins_plugins_state: latest
      jenkins_plugin_timeout: 60

  # FIXME This code is replicated in docker-registry.yaml. Refactor using a module
  - name: Create Jenkins key
    become: yes
    become_user: root
    openssl_privatekey:
      owner: root
      group: ssl-cert
      path: /etc/ssl/private/jenkins.localhost.key

  - name: Look for Jenkins certificate
    stat:
      path: /etc/ssl/certs/jenkins.localhost.crt
    register: jenkins_certificate

  - name: Create Jenkins certificate Signing Request
    when: jenkins_certificate.stat.exists == False
    become: yes
    become_user: root
    openssl_csr:
      privatekey_path: /etc/ssl/private/jenkins.localhost.key
      path: /tmp/jenkins.localhost.csr
      common_name: jenkins.localhost

  - name: Create Jenkins certificate
    when: jenkins_certificate.stat.exists == False
    become: yes
    become_user: root
    openssl_certificate:
      provider: ownca
      ownca_path: /etc/ssl/certs/localhost_CA.pem
      ownca_privatekey_path: /etc/ssl/private/localhost_CA.key
      privatekey_path: /etc/ssl/private/jenkins.localhost.key
      csr_path: /tmp/jenkins.localhost.csr
      path: /etc/ssl/certs/jenkins.localhost.crt

  - name: Copy jenkins.localhost
    become: yes
    become_user: root
    copy:
      src: jenkins/jenkins.localhost
      dest: /etc/nginx/sites-available/jenkins.localhost
      owner: root
      group: root
      mode: '0644'

  - name: Create symlink to enable "jenkins.localhost" site
    become: yes
    become_user: root
    file:
      src: /etc/nginx/sites-available/jenkins.localhost
      dest: /etc/nginx/sites-enabled/jenkins.localhost
      owner: root
      group: root
      state: link

  - name: Reload Nginx
    become: yes
    become_user: root
    service:
      name: nginx
      state: reloaded

  - name: Add jenkins user to group docker
    become: yes
    become_user: root
    user:
      name: jenkins
      groups: docker
      append: yes

  - name: Set Jenkins user name for git
    become: yes
    become_user: jenkins
    shell: "git config --global user.name 'Jenkins Pipeline'"

  - name: Set Jenkins e-mail for git
    become: yes
    become_user: jenkins
    shell: "git config --global user.email 'jenkins@localhost'"

#######################################################################################
# TODO: Only managed to make this work after setting PATH to include /var/lib/jenkins/bin 
# both in /var/lib/jenkins/.profile and /etc/init.d/jenkins
#
#  - name: Copy .profile
#    become: yes
#    become_user: root
#    copy:
#      src: jenkins/profile
#      dest: /var/lib/jenkins/.profile
#      owner: jenkins
#      group: jenkins
#      mode: '0644'
#
#  - name: Add /var/lib/jenkins/bin and /var/lib/jenkins/go/bin to PATH
#    become: yes
#    become_user: root
#    shell: "sed -i 's/\\(^PATH=\\/bin:\\/usr\\/bin:\\/sbin:\\/usr\\/sbin$\\)/\\1:\\/var\\/lib\\/jenkins\\/bin:\\/var\\/lib\\/jenkins\\/go\\/bin/' /etc/init.d/jenkins"
#######################################################################################

#  - name: Reload Jenkins
#    become: yes
#    become_user: root
#    service:
#      name: jenkins
#      state: restarted
#      daemon_reload: yes

  # FIXME create-user-bin.yaml should be a module and this duplicated code, removed
  - name: Create /var/lib/jenkins/bin
    become: yes
    become_user: jenkins
    file:
      path: "/var/lib/jenkins/bin"
      mode: '744'
      state: directory

  # FIXME This code is replicated in kubeval.yaml. Refactor using a module
  - name: Get kubeval latest version
    shell: "curl -Ls -o /dev/null -w %{url_effective} https://github.com/instrumenta/kubeval/releases/latest | sed -e 's|.*/||'"
    args:
      warn: false
    register: kubeval_version

  - name: Download kubeval
    become: yes
    become_user: jenkins
    unarchive:
      src: https://github.com/instrumenta/kubeval/releases/download/{{ kubeval_version.stdout }}/kubeval-linux-amd64.tar.gz
      dest: /tmp
      remote_src: yes

  - name: Copy kubeval binary to /var/lib/jenkins/bin
    become: yes
    become_user: jenkins
    copy:
      src: /tmp/kubeval
      dest: "/var/lib/jenkins/bin/kubeval-{{ kubeval_version.stdout }}"
      mode: '0744'

  - name: Create a symbolic link
    become: yes
    become_user: jenkins
    file:
      src: "/var/lib/jenkins/bin/kubeval-{{ kubeval_version.stdout }}"
      dest: /var/lib/jenkins/bin/kubeval
      state: link

  # TODO Configure KUBECONFIG, and PATH including /var/lib/jenkins/bin

  # TODO Create namespaces and contexts for "test" and "prod" environments

  # TODO Configure Jenkins using plugin configuration-as-code

  # TODO Deploy docker container to serve as agent
